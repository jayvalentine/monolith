{"version":3,"sources":["random.ts","idallocator.ts","language.ts","tribe.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"tribe.1b92bc75.js","sourceRoot":"../src","sourcesContent":["export class Random {\n  static interval(min: number, max: number) : number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  static choice<T>(array: T[]) : T {\n    const index = Random.interval(0, array.length - 1);\n    return array[index];\n  }\n\n  static chance(c: number) : boolean {\n    if (Math.random() < c) return true;\n    else return false;\n  }\n\n  static progressiveChance(c: number, progress: number, upperBound: number) : boolean {\n    const limit = Math.min(progress * c, upperBound);\n  \n    if (Math.random() < limit) return true;\n    else return false;\n  }\n}","export class IDAllocator {\n  private static ids : Object = {};\n\n  static allocate(base: string) : string {\n    if (!IDAllocator.ids.hasOwnProperty(base)) {\n      IDAllocator.ids[base] = 0;\n    }\n\n    let id : string = `${base}-${IDAllocator.ids[base]}`;\n    IDAllocator.ids[base]++;\n\n    return id;\n  }\n}","import { Random } from \"./random\";\n\nconst Alphabet : string[] = []\n\nfor (let i = 0; i < 26; i++) {\n  Alphabet[i] = String.fromCharCode(97 + i);  \n}\n\nconst Vowel : string[] = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\nconst Consonant : string[] = Alphabet.filter(function (v, i, a) {return (Vowel.indexOf(v) == -1)});\n\nclass Suffix {\n    public readonly suffix : string;\n    public readonly optional : string;\n\n    constructor(suffix: string, optional: string) {\n        this.suffix = suffix;\n        this.optional = optional;\n    }\n}\n\nexport class Noun {\n    public readonly base : string;\n    \n    public readonly plural : boolean;\n    public readonly genitive : boolean;\n    \n    public readonly adjectives : string[];\n\n    constructor(base: string, plural: boolean, genitive: boolean, adjectives: string[]) {\n        this.base = base;\n        this.plural = plural;\n        this.genitive = genitive;\n        this.adjectives = adjectives;\n    }\n}\n\nexport class Language {\n    public static capitalize(word: string) : string {\n        let restOfWord : string = word.slice(1);\n        return word.charAt(0).toUpperCase() + restOfWord;\n    }\n\n    public static toTitle(sentence: string) : string {\n      return sentence.split(' ').map(Language.capitalize).join(' ');\n    }\n\n    private static getSuffix() : Suffix {\n        let optional : string = Random.choice(Vowel);\n\n        let suffix : string = Random.choice(Consonant) + Random.choice(Vowel);\n\n        return new Suffix(suffix, optional);\n    }\n\n    private static addSuffix(word: string, suffix: Suffix) : string {\n        if (Consonant.indexOf(word[word.length-1]) > -1) {\n            word += suffix.optional;\n        }\n        word += suffix.suffix;\n\n        return word;\n    }\n\n    private readonly plural : Suffix;\n    private readonly genitive : Suffix;\n    private readonly adjective : Suffix;\n\n    private readonly adjectivePolicy : Language.Position;\n\n    private translations : Object;\n\n    constructor() {\n        this.plural = Language.getSuffix();\n        this.genitive = Language.getSuffix();\n        this.adjective = Language.getSuffix();\n\n        if (Random.chance(0.5)) {\n            this.adjectivePolicy = Language.Position.Before;\n        }\n        else {\n            this.adjectivePolicy = Language.Position.After;\n        }\n\n        this.translations = {};\n    }\n\n    translate(sentence: Noun[]) : string {\n        let sentenceTranslated : string[] = [];\n        \n        for (let word of sentence) {\n            let wordTranslated : string = this.translateWord(word.base);\n\n            if (word.plural) wordTranslated = Language.addSuffix(wordTranslated, this.plural);\n            if (word.genitive) wordTranslated = Language.addSuffix(wordTranslated, this.genitive);\n\n            let adjectives : string[] = []\n            for (let adj of word.adjectives) {\n                let adjTranslated = this.translateWord(adj);\n\n                adjTranslated = Language.addSuffix(adjTranslated, this.adjective);\n\n                adjectives.push(adjTranslated);\n            }\n\n            if (this.adjectivePolicy == Language.Position.Before) {\n                sentenceTranslated = sentenceTranslated.concat(adjectives);\n            }\n\n            sentenceTranslated.push(wordTranslated);\n\n            if (this.adjectivePolicy == Language.Position.After) {\n                sentenceTranslated = sentenceTranslated.concat(adjectives);\n            }\n        }\n\n        return sentenceTranslated.join(\" \");\n    }\n\n    private translateWord(word: string) {\n        // First split word into phonemes.\n        let phonemes : string[] = [];\n\n        let currentPhoneme : string = \"\";\n\n        for (let letter of word.split('')) {\n            if (currentPhoneme.length > 0) {\n                let lastLetter = currentPhoneme[currentPhoneme.length - 1];\n\n                if (Vowel.indexOf(lastLetter) > -1) {\n                    phonemes.push(currentPhoneme);\n                    currentPhoneme = \"\";\n                }\n                else if ((Consonant.indexOf(lastLetter) > -1) && (Consonant.indexOf(letter) > -1)) {\n                    if (lastLetter != letter) {\n                        phonemes.push(currentPhoneme);\n                        currentPhoneme = \"\";\n                    }\n                }\n            }\n\n            currentPhoneme += letter;\n        }\n\n        if (currentPhoneme.length > 0) phonemes.push(currentPhoneme);\n\n        // Translate each phoneme.\n        let wordTranslated : string = \"\";\n\n        for (let p of phonemes) {\n            wordTranslated += this.translatePhoneme(p);\n        }\n\n        return wordTranslated;\n    }\n\n    private translatePhoneme(phoneme: string) {\n        if (!this.translations.hasOwnProperty(phoneme)) {\n            let t : string = \"\";\n\n            for (let letter of phoneme.split('')) {\n                if (Consonant.indexOf(letter) > -1) t += Random.choice(Consonant);\n                else t += Random.choice(Vowel);\n            }\n\n            this.translations[phoneme] = t;\n        }\n\n        return this.translations[phoneme];\n    }\n}\n\nexport namespace Language {\n    export enum Position {\n        Before = \"Before\",\n        After = \"After\",\n    }\n}","import { Random } from \"./random\";\nimport { IDAllocator } from \"./idallocator\";\nimport { Language, Noun } from \"./language\";\n\n// A tribe is a group of people with common traits.\nexport class Tribe {\n  private _population : number;\n\n  private _migrationChance : number;\n\n  private _eventProgress : Object;\n\n  private _technology : string[];\n  private _culture : string[];\n\n  private _name : Noun[];\n  private _language : Language;\n\n  private _relations : Object;\n\n  public attitudes: Attitudes;\n\n  public dead : boolean;\n\n  public readonly id : string;\n\n  constructor(population: number) {\n    this.id = IDAllocator.allocate(\"tribe\");\n\n    this._population = population;\n    this._migrationChance = 0.000001;\n    this._eventProgress = {};\n\n    this._relations = {};\n\n    this._technology = [];\n    this._culture = [];\n\n    this._name = [];\n\n    this.attitudes = new Attitudes();\n\n    this.attitudes.monolith = Attitudes.Monolith.Unencountered;\n\n    this.dead = false;\n\n    this.attitudes.others = Random.choice([\n      Attitudes.Others.Aggressive,\n      Attitudes.Others.Defensive,\n      Attitudes.Others.Diplomatic,\n      Attitudes.Others.Insular\n    ]);\n\n    this.attitudes.world = Random.choice([\n      Attitudes.World.Exploit,\n      Attitudes.World.Explore,\n      Attitudes.World.Harmony,\n      Attitudes.World.Survival\n    ])\n\n    this.attitudes.self = Random.choice([\n      Attitudes.Self.Hierarchical,\n      Attitudes.Self.Egalitarian\n    ])\n\n    this._language = new Language();\n  }\n\n  population() : number {\n    return this._population;\n  }\n\n  decreasePopulation(value: number) {\n    this._population -= value;\n  }\n\n  increasePopulation(value: number) {\n    this._population += value;\n  }\n\n  // Determines change in tribe's population.\n  grow() {\n    const oldPopulation = this.population();\n\n    let growthCount : number = 0;\n    let deathCount : number = 0;\n\n    const growthRate = this.growthRate();\n    const deathRate = this.deathRate();\n\n    for (let i = 0; i < 20; i++) {\n      if (Random.chance(growthRate)) growthCount += (Math.floor(this.population()*0.05));\n      if (Random.chance(deathRate)) deathCount += (Math.floor(this.population()*0.05));\n    }\n\n    // Increase population by growth count and decrease by death count.\n    this.increasePopulation(growthCount);\n    this.decreasePopulation(deathCount);\n  }\n\n  // Splits the tribe into multiple groups according to the proportions given.\n  // Returns a list of the new tribes (excluding the original).\n  split(proportions: number[]) : Tribe[] {\n    let populations : number[] = [];\n    let newTribes : Tribe[] = [];\n\n    for (let p of proportions) {\n      populations.push(Math.floor(this._population*p));\n    }\n\n    for (let p of populations.slice(1)) {\n      let t : Tribe = new Tribe(p);\n\n      // Set attitudes of the new tribe to the same as this one.\n      t.attitudes.monolith = this.attitudes.monolith;\n      t.attitudes.others = this.attitudes.others;\n      t.attitudes.world = this.attitudes.world;\n      t.attitudes.self = this.attitudes.self;\n\n      // Set technology and culture of new tribe.\n      for (let tech of this._technology) {\n        t.addTechnology(tech);\n      }\n\n      for (let cult of this._culture) {\n        t.addCulture(cult);\n      }\n\n      // Set migration chance of new tribe.\n      t.setMigrationChance(this._migrationChance);\n\n      newTribes.push(t);\n    }\n\n    // Reduce this tribe's population to the first proportion.\n    this._population = Math.floor(proportions[0] * this._population);\n\n    // Return the new tribes.\n    return newTribes;\n  }\n\n  relationship(tribe: Tribe) : number {\n    if (!this._relations.hasOwnProperty(tribe.id)) {\n      return 0;\n    }\n\n    return this._relations[tribe.id];\n  }\n\n  changeRelationship(tribe: Tribe, value: number) {\n    if (!this._relations.hasOwnProperty(tribe.id)) {\n      this._relations[tribe.id] = 0;\n    }\n\n    this._relations[tribe.id] += value;\n\n    console.log(`Set relationship of ${this.id} for ${tribe.id} to ${this._relations[tribe.id]}.`);\n  }\n\n  attack() : number {\n    let attack : number = 0;\n\n    if (this.attitudes.others == Attitudes.Others.Aggressive) attack += 1;\n    if (this.hasTechnology(\"tools\")) attack += 1;\n\n    return attack;\n  }\n\n  defense() : number {\n    let defense : number = 0;\n\n    if (this.attitudes.others == Attitudes.Others.Defensive) defense += 1;\n    if (this.hasTechnology(\"construction\")) defense += 1;\n\n    return defense;\n  }\n\n  migrate() : boolean {\n    return Random.chance(this._migrationChance);\n  }\n\n  setMigrationChance(c: number) {\n    this._migrationChance = c;\n  }\n\n  progress(e: TribeEvent) : number {\n    return this._eventProgress[e.id];\n  }\n\n  increaseProgress(e: TribeEvent, progress: number) {\n    // Default to starting from 0 if no progress is stored.\n    let currentProgress : number = 0;\n\n    // Get the progress from the map if it exists.\n    if (this._eventProgress.hasOwnProperty(e.id)) currentProgress = this._eventProgress[e.id];\n\n    // Set the new progress.\n    this._eventProgress[e.id] = currentProgress+progress;\n  }\n\n  resetProgress(e: TribeEvent) {\n    this._eventProgress[e.id] = 0;\n  }\n\n  addTechnology(technology: string) {\n    if (this._technology.indexOf(technology) > -1) return;\n    this._technology.push(technology);\n  }\n\n  removeTechnology(technology: string) {\n    // Return silently if tribe doesn't have technology.\n    const i = this._technology.indexOf(technology);\n    if (i == -1) return;\n\n    this._technology.splice(i, 1);\n  }\n\n  hasTechnology(technology: string) : boolean {\n    if (this._technology.indexOf(technology) > -1) return true;\n    else return false;\n  }\n\n  addCulture(culture: string) {\n    if (this._culture.indexOf(culture) > -1) return;\n    this._culture.push(culture);\n  }\n\n  removeCulture(culture: string) {\n    // Return silently if tribe doesn't have culture.\n    const i = this._culture.indexOf(culture);\n    if (i == -1) return;\n\n    this._culture.splice(i, 1);\n  }\n\n  hasCulture(culture: string) : boolean {\n    if (this._culture.indexOf(culture) > -1) return true;\n    else return false;\n  }\n\n  title() : string {\n    if (this._name.length == 0) return \"a tribe\";\n    else return \"the \" + Language.toTitle(this._language.translate(this._name));\n  }\n\n  titleCapitalized() : string {\n    if (this._name.length == 0) return \"A tribe\";\n    else return \"The \" + Language.toTitle(this._language.translate(this._name));\n  }\n\n  setName(name: Noun[]) {\n    this._name = name;\n  }\n\n  name() : Noun[] {\n    return this._name;\n  }\n\n  language() : Language {\n    return this._language;\n  }\n\n  private growthRate() : number {\n    let g : number = 0.0001;\n\n    if (this.hasTechnology(\"fire\")) g = 4 * g;\n\n    if (this.hasTechnology(\"agriculture\")) g = 4 * g;\n\n    return g;\n  }\n\n  private deathRate() : number {\n    let d : number = 0.0001;\n\n    return d;\n  }\n}\n\nexport class Attitudes {\n  public monolith: Attitudes.Monolith;\n  public others: Attitudes.Others;\n  public world: Attitudes.World;\n  public self: Attitudes.Self;\n\n  static MonolithString(monolith: Attitudes.Monolith) : string {\n    switch(monolith) {\n      case Attitudes.Monolith.Unencountered: return \"unencountered\";\n      case Attitudes.Monolith.Curious: return \"curious\";\n      case Attitudes.Monolith.Superstitious: return \"superstitious\";\n      case Attitudes.Monolith.Fearful: return \"fearful\";\n    }\n  }\n\n  static OthersString(others: Attitudes.Others) : string {\n    switch(others) {\n      case Attitudes.Others.Aggressive: return \"aggressive\";\n      case Attitudes.Others.Defensive: return \"defensive\";\n      case Attitudes.Others.Diplomatic: return \"diplomatic\";\n      case Attitudes.Others.Insular: return \"insular\";\n    }\n  }\n\n  static WorldString(world: Attitudes.World) : string {\n    switch(world) {\n      case Attitudes.World.Exploit: return \"exploitative\";\n      case Attitudes.World.Explore: return \"explorative\";\n      case Attitudes.World.Harmony: return \"harmonious\";\n      case Attitudes.World.Survival: return \"survivalists\";\n    }\n  }\n\n  static SelfString(self: Attitudes.Self) : string {\n    switch(self) {\n      case Attitudes.Self.Hierarchical: return \"hierarchical\";\n      case Attitudes.Self.Egalitarian: return \"egalitarian\";\n    }\n  }\n\n  constructor() {\n\n  }\n\n  monolithString() : string {\n    return Attitudes.MonolithString(this.monolith);\n  }\n\n  othersString() : string {\n    return Attitudes.OthersString(this.others);\n  }\n\n  worldString() : string {\n    return Attitudes.WorldString(this.world);\n  }\n\n  selfString() : string {\n    return Attitudes.SelfString(this.self);\n  }\n}\n\nexport namespace Attitudes {\n  export enum Monolith {\n    Unencountered = \"unencountered\",\n    Curious = \"curious\",\n    Superstitious = \"superstitious\",\n    Fearful = \"fearful\",\n  }\n\n  export enum Others {\n    Aggressive = \"aggressive\",\n    Defensive = \"defensive\",\n    Diplomatic = \"diplomatic\",\n    Insular = \"insular\",\n  }\n\n  export enum World {\n    Exploit = \"exploit\",\n    Explore = \"explore\",\n    Harmony = \"harmony\",\n    Survival = \"survival\",\n  }\n\n  export enum Self {\n    Hierarchical = \"hierarchical\",\n    Egalitarian = \"egalitarian\",\n  }\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}